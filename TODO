### Guidance ###

For unknown version point:
metadata functions
Next episode suggestion - looks at your DB and suggests three shows to watch next, weighting Watching shows by percentage progress, completed shows by rewatch value and # of times rewatched (tails better than bell), and other shows by length?
Install script that checks for and pulls unsatisfied Perl dependencies?
The project still needs Anime and Manga objects. They will be useful for an option to preserve network traffic rather than memory footprint.
Perhaps disambiguation list should be loaded from an external file, so the user can modify it without diving into code?
= Recent activity buttons for five most recent shows
Display/edit of tags for episode/chapter?
Display/edit of dates started/completed
Social media integration

Roadmap
=======
(release criteria)
Items marked with = are already completed.

v0.1:
-----
= Prima GUI to same point as old GTK2 GUI. (I think.)
= Manual entry of titles
change title status button (move icon)
Start rewatching show button (use previous track (|<<) icon to save button space?)
Option: UI,jitload - Instead of loading all titles (a slow process on older machines), just load one viewer full of the titles for the selected status, and load other statuses into it as the user needs them.
= if notabs option turned on, fillPage keeps SQL result and displays only the first n titles, adds forward/back buttons to view more ^^ this is same as previous line
Add more forward/back button options
Put jitload option on screen with initial DB fields
= FIX: insertDateWidget premature closure
FIX: Verb in Recent tab for manga
Export/Import of episode data
FIX PGUI:1285 marked text error
FIX PGUI:624 target error (add anime)
= Option: UI,notabs - tabs no longer work properly on my machine (not sure if this is an error in my new config or in Prima), so I need to make an option for not using the notebook container. Also, scrolled notebook tabs sometimes don't scroll all the way to the bottom, which would also be eliminated by an option that doesn't use them.
Notabs UI for Options dialog, too.

v0.2:
-----
Rules in title listings
Add button for each unrated episode in series rating screen to rate that episode
Check whether title is a long runner before putting up boxes of bars or buttons for each unrated episode
Buttons in titlerow should pass along a reference to the row itself to facilitate moving title around, resetting icons, etc.
Options: mask row type
Options: content the user cares about (don't ding e.g. violence, if user isn't bothered by it)
Content mapping for series, possibly episodes

v0.3:
-----
Option: display last episode watched, or next episode to watch?
= Episode voting
Display/edit of tags for series/pub
Options: If a radiobutton option has more than two options, generate a VBox instead of an HBox
Storage of additional title information
Recent activity timeline of activity within the past n days.
FIX: Tabbed notebook does some wonky things, sometimes. Consider replacing with something more stable, or figure out why these are messing up.

v1.0:
-----
FIX: Some characters cannot be stored/displayed properly, right now.
Storage of alternate titles (including CJK support)
Sanity checking for all input values, specifically those expect to be between, e.g., 0..10.
= Episode name recording
Detect movies and put them on their own notebook tab
Allow titles to be arranged in different orders
Main context should create (and pass down) global references for the rows that'll go in the display tables, so that the program can rearrange the display without making SQL calls every time. But only if the net-conserving mode is chosen.
Manga storing of volumes (chapter column in volume table), and automatic update of chapter count when a volume is marked complete (chs/vols, if chapter count in volume == 0)
tab refresh should check to see if there are existing objects (if conserving net traffic) and use those, if possible
tab refresh should be able to refresh just one of the tabs, say 'man', if importing Manga...
Import JSON objects (ImportHum)
Pretty up the display tables
Export of database to XML
Export of database to SQL dump document
Import of content marker files (from other users, who may not have the same numbering?)

v2.0:
-----
plugin registry
option registry
plugins that can add new columns to the display tables
plugins that can add tabs to main notebook

