### Guidance ###

Start with critical functions. Leave added functionality for after I can click and have an episode I've watched recorded.
Everything else can wait.

Finish coding import (specifically, tags handling) so that the limiter can be removed from the loop, allowing the loop to return the proper error code, which cascades to other functions
FIX: SQLite can't recognize tables already exist, right now.
FIX: Some characters cannot be stored/displayed properly, right now.

Stuff that is trivial to implement:
Option: display last episode watched, or next episode to watch?
Import should (using fillPage?) update the display when it finishes.
Import should display a sayBox with the count of successfully imported/updated titles.
createMainWin should generate the tables fillPage will use, so that menu items, etc., can fill/append to them.

Stuff that can wait:
Episode voting
Episode name recording
metadata functions
Next episode suggestion - looks at your DB and suggests three shows to watch next, weighting Watching shows by percentage progress, completed shows by rewatch value and # of times rewatched (tails better than bell), and other shows by length?
Detect movies and put them on their own notebook tab
Sanity checking for all input values, specifically those expect to be between, e.g., 0..10.
Install script that checks for and pulls unsatisfied Perl dependencies?
When building title rows, put in button(s) for moving to another status
Allow titles to be arranged in different orders
Options dialog box can probably wait
Storage of alternate titles (including CJK support)
Changing options immediately updates all tabs (requires hash of boxes to update)
The project still needs Anime and Manga objects. They will be useful for an option to preserve network traffic rather than memory footprint.
Main context should create (and pass down) global references for the raows that'll go in the display tables, so that the program can rearrange the display without making SQL calls every time. But only if the abovementioned option is chosen.
Manga storing of volumes, and automatic update of chapter count when a volume is marked complete
Perhaps disambiguation list should be loaded from an external file, so the user can modify it without diving into code?
Make sure all SQL update functions use prepareFromHash (for uniformity and easier debugging)
tab refresh should check to see if there are existing objects (if conserving net traffic) and use those, if possible
tab refresh should be able to refresh just one of the tabs, say 'man', if importing Manga...
